<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Server-Api on ito API documentation</title><link>https://docs.ito-app.org/api-backend/</link><description>Recent content in Server-Api on ito API documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 12 Jul 2018 18:19:33 +0600</lastBuildDate><atom:link href="https://docs.ito-app.org/api-backend/index.xml" rel="self" type="application/rss+xml"/><item><title>Install Server</title><link>https://docs.ito-app.org/api-backend/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.ito-app.org/api-backend/install/</guid><description>Installing Server You can clone the repositoring by using this code
git clone https://github.com/ito-org/api-backend To start with this application, download the current version by using git clone.
The recommended way to install the API server is to use docker with docker-compose.
Docker Compose To start docker-compose you need to set the following environment variables so that the server knows how to connect to your Postgres database. For that you can add an .</description></item><item><title>API Reference</title><link>https://docs.ito-app.org/api-backend/main/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.ito-app.org/api-backend/main/</guid><description>Introduction public class ItoApi { private static final String BASE_URL = &amp;#34;https://tcn.ito-app.org/tcnreport&amp;#34;; public static List&amp;lt;byte[]&amp;gt; refreshInfectedUUIDs() { List&amp;lt;byte[]&amp;gt; reports = new LinkedList&amp;lt;&amp;gt;(); HttpURLConnection urlConnection = null; try { //TODO use a more sophisticated library URL url = new URL(BASE_URL); urlConnection = (HttpURLConnection) url.openConnection(); urlConnection.addRequestProperty(&amp;#34;Accept&amp;#34;, &amp;#34;application/octet-stream&amp;#34;); InputStream in = urlConnection.getInputStream(); byte[] base = new byte[BASELENGTH]; byte[] memo; int readBytes; while ((readBytes = in.read(base, 0, BASELENGTH)) == BASELENGTH) { int memolength = (int) base[BASELENGTH - 1] &amp;amp; 0xFF; memo = new byte[memolength]; if (in.</description></item></channel></rss>