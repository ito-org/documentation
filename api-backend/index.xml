<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ito API on ito API documentation</title><link>https://docs.ito-app.org/api-backend/</link><description>Recent content in ito API on ito API documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 12 Jul 2018 18:19:33 +0600</lastBuildDate><atom:link href="https://docs.ito-app.org/api-backend/index.xml" rel="self" type="application/rss+xml"/><item><title>Installation</title><link>https://docs.ito-app.org/api-backend/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.ito-app.org/api-backend/install/</guid><description>Installation You can clone the repository by using this code
git clone &amp;#34;https://github.com/ito-org/api-backend&amp;#34; To start with this application, download the current version by using git clone.
The recommended way to install the API server is to use docker with docker-compose.
Docker Compose To start docker-compose you need to set the following environment variables so that the server knows how to connect to your Postgres database. For that you can add an .</description></item><item><title>API Reference</title><link>https://docs.ito-app.org/api-backend/main/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.ito-app.org/api-backend/main/</guid><description>API The ito API has intentionally been kept extremely lean, there is only one endpoint: https://tcn.ito-app.org/tcnreport
Initialization
package main import ( &amp;#34;bytes&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;github.com/ito-org/go-backend/tcn&amp;#34; ) public class ItoApi { private static final String BASE_URL = &amp;#34;https://tcn.ito-app.org&amp;#34;; } This way our code stays easy to understand and to audit.
Fetching reports With a GET request you can download all recent reports of infected users. Those are returned as a bytestream (MIME type application/octet-stream) of TCN reports as per the protocol definition.</description></item></channel></rss>